import React__default from 'react';
import { isFunction } from '@aws-amplify/ui';
import { createLocationCredentialsStore } from './credentialsStore/create.mjs';

const createCredentialsStore = ({ ...input }) => {
    const { destroy, getProvider } = createLocationCredentialsStore(input);
    return {
        destroy,
        getCredentials: ({ scope, permissions }) => getProvider({
            scope,
            permissions,
        }),
    };
};
const isCredentialsStore = (value) => isFunction(value?.getCredentials);
function useCredentialsStore({ getLocationCredentials: handler, initialValue, onDestroy, registerAuthListener, }) {
    const hasExistingStore = isCredentialsStore(initialValue);
    const [store, setStore] = React__default.useState(() => hasExistingStore ? initialValue : createCredentialsStore({ handler }));
    const { destroy } = store;
    React__default.useEffect(() => {
        if (hasExistingStore) {
            return;
        }
        const handleAuthStatusChange = () => {
            destroy();
            if (isFunction(onDestroy)) {
                onDestroy();
            }
            setStore(createCredentialsStore({ handler }));
        };
        // provide `handleAuthStatusChange` to consumer
        registerAuthListener(handleAuthStatusChange);
    }, [destroy, handler, hasExistingStore, onDestroy, registerAuthListener]);
    return store;
}

export { useCredentialsStore };
