import { assertValidationError, StorageValidationErrorCode } from '@aws-amplify/storage/internals';
import { initStore, getCacheValue, fetchNewValue } from './store.mjs';

/**
 * Keep all cache records for all instances of credentials store in a singleton
 * so we can reliably de-reference from the memory when we destroy a store
 * instance.
 */
const storeRegistry = new WeakMap();
/**
 * @internal
 */
const createStore = (refreshHandler, size) => {
    const storeSymbol = { value: Symbol('LocationCredentialsStore') };
    storeRegistry.set(storeSymbol, initStore(refreshHandler, size));
    return storeSymbol;
};
const getCredentialsStore = (storeSymbol) => {
    assertValidationError(storeRegistry.has(storeSymbol), StorageValidationErrorCode.LocationCredentialsStoreDestroyed);
    return storeRegistry.get(storeSymbol);
};
/**
 * @internal
 */
const getValue = async (input) => {
    const { storeSymbol: storeReference, location, forceRefresh } = input;
    const store = getCredentialsStore(storeReference);
    if (!forceRefresh) {
        const credentials = getCacheValue(store, location);
        if (credentials !== null) {
            return { credentials };
        }
    }
    return fetchNewValue(store, location);
};
const removeStore = (storeSymbol) => {
    storeRegistry.delete(storeSymbol);
};

export { createStore, getValue, removeStore };
