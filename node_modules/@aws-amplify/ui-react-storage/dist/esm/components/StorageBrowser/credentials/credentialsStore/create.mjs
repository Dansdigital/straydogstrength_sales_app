import { assertValidationError, StorageValidationErrorCode } from '@aws-amplify/storage/internals';
import { createStore, removeStore, getValue } from './registry.mjs';

const validateS3Uri = (uri) => {
    const s3UrlSchemaRegex = /^s3:\/\/[^/]+/;
    assertValidationError(s3UrlSchemaRegex.test(uri), StorageValidationErrorCode.InvalidS3Uri);
};
const createLocationCredentialsStore = (input) => {
    const storeSymbol = createStore(input.handler);
    const store = {
        getProvider(providerLocation) {
            const locationCredentialsProvider = async ({ forceRefresh = false, } = {}) => {
                validateS3Uri(providerLocation.scope);
                // TODO(@AllanZhengYP): validate the action bucket and paths matches provider scope.
                return getValue({
                    storeSymbol,
                    location: { ...providerLocation },
                    forceRefresh,
                });
            };
            return locationCredentialsProvider;
        },
        destroy() {
            removeStore(storeSymbol);
        },
    };
    return store;
};

export { createLocationCredentialsStore };
