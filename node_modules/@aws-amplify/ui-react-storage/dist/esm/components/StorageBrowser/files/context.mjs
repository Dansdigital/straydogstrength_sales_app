import React__default from 'react';
import { noop } from '@aws-amplify/ui';
import { createContextUtilities } from '@aws-amplify/ui-react-core';
import { useFileSelect } from '@aws-amplify/ui-react/internal';
import { filesReducer, parseFileSelectParams } from './utils.mjs';

const defaultValue = [undefined, noop];
const { FilesContext, useFiles } = createContextUtilities({
    contextName: 'Files',
    defaultValue,
});
function FilesProvider({ children, }) {
    const [items, dispatch] = React__default.useReducer(filesReducer, []);
    const [fileInput, handleFileSelect] = useFileSelect((nextFiles) => {
        dispatch({ type: 'ADD_FILE_ITEMS', files: nextFiles });
    });
    const handleFilesAction = React__default.useCallback((action) => {
        if (action.type === 'SELECT_FILES') {
            handleFileSelect(...parseFileSelectParams(action.selectionType));
        }
        else {
            dispatch(action);
        }
    }, [handleFileSelect]);
    const value = React__default.useMemo(() => [items, handleFilesAction], [items, handleFilesAction]);
    return (React__default.createElement(FilesContext.Provider, { value: value },
        fileInput,
        children));
}

export { FilesContext, FilesProvider, useFiles };
