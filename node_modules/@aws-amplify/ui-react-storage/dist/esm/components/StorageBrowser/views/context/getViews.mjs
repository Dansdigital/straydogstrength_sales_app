import { capitalize, isObject, isFunction } from '@aws-amplify/ui';
import { DEFAULT_ACTION_VIEWS } from './actionViews.mjs';
import { DEFAULT_PRIMARY_VIEWS } from './primaryViews.mjs';

const getViews = (views, customConfigs) => {
    const resolvedDefaultActionViews = Object.entries(DEFAULT_ACTION_VIEWS).reduce((output, [actionName, component]) => {
        // use viewName to lookup overrides for default action views
        const viewName = capitalize(`${actionName}View`);
        return {
            ...output,
            [actionName]: (views?.[viewName] ?? component),
        };
    }, {});
    const customActionViews = !isObject(customConfigs)
        ? {}
        : Object.entries(customConfigs).reduce((acc, [key, config]) => {
            // ignore custom actions that are only handlers
            return !isObject(config) || isFunction(config)
                ? acc
                : {
                    ...acc,
                    [key]: views?.[config.viewName],
                };
        }, {});
    return {
        action: { ...resolvedDefaultActionViews, ...customActionViews },
        primary: {
            LocationActionView: views?.LocationActionView ?? DEFAULT_PRIMARY_VIEWS.LocationActionView,
            LocationDetailView: views?.LocationDetailView ?? DEFAULT_PRIMARY_VIEWS.LocationDetailView,
            LocationsView: views?.LocationsView ?? DEFAULT_PRIMARY_VIEWS.LocationsView,
        },
    };
};

export { getViews };
