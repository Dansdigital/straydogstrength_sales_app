import React__default from 'react';
import { classNames } from '@aws-amplify/ui';
import '@aws-amplify/ui-react';
import { ViewElement } from '../../../components/elements/definitions.mjs';
import '../../../components/elements/IconElement.mjs';
import { STORAGE_BROWSER_BLOCK } from '../../../components/base/constants.mjs';
import '../../../components/composables/context.mjs';
import '@aws-amplify/ui-react-core';
import '@aws-amplify/ui-react-core/elements';
import { ActionCancelControl } from '../../../controls/ActionCancelControl.mjs';
import { ActionExitControl } from '../../../controls/ActionExitControl.mjs';
import { ActionStartControl } from '../../../controls/ActionStartControl.mjs';
import { DataTableControl } from '../../../controls/DataTableControl.mjs';
import { LoadingIndicatorControl } from '../../../controls/LoadingIndicatorControl.mjs';
import { MessageControl } from '../../../controls/MessageControl.mjs';
import { SearchFieldControl } from '../../../controls/SearchFieldControl.mjs';
import { StatusDisplayControl } from '../../../controls/StatusDisplayControl.mjs';
import { TitleControl } from '../../../controls/TitleControl.mjs';
import { CopyViewProvider } from './CopyViewProvider.mjs';
import { FoldersMessageControl } from './FoldersMessageControl.mjs';
import { FoldersPaginationControl } from './FoldersPaginationControl.mjs';
import { FoldersTableControl } from './FoldersTableControl.mjs';
import { ActionDestinationControl } from '../../../controls/ActionDestinationControl.mjs';
import { useCopyView } from './useCopyView.mjs';

const CopyView = ({ className, ...props }) => {
    const state = useCopyView(props);
    const { isProcessing, isProcessingComplete } = state;
    return (React__default.createElement(ViewElement, { className: classNames(STORAGE_BROWSER_BLOCK, className) },
        React__default.createElement(CopyViewProvider, { ...state },
            React__default.createElement(ActionExitControl, null),
            React__default.createElement(TitleControl, null),
            React__default.createElement(ViewElement, { className: `${STORAGE_BROWSER_BLOCK}__data-table` },
                React__default.createElement(DataTableControl, null)),
            isProcessing || isProcessingComplete ? null : (React__default.createElement(React__default.Fragment, null,
                React__default.createElement(ViewElement, { className: `${STORAGE_BROWSER_BLOCK}__controls` },
                    React__default.createElement(ViewElement, { className: `${STORAGE_BROWSER_BLOCK}__search` },
                        React__default.createElement(SearchFieldControl, null)),
                    React__default.createElement(FoldersPaginationControl, null)),
                React__default.createElement(ViewElement, { className: `${STORAGE_BROWSER_BLOCK}__data-table` },
                    React__default.createElement(LoadingIndicatorControl, null),
                    React__default.createElement(FoldersTableControl, null),
                    React__default.createElement(FoldersMessageControl, null)))),
            React__default.createElement(ViewElement, { className: `${STORAGE_BROWSER_BLOCK}__summary` },
                React__default.createElement(ActionDestinationControl, null),
                React__default.createElement(StatusDisplayControl, null)),
            React__default.createElement(ViewElement, { className: `${STORAGE_BROWSER_BLOCK}__footer` },
                React__default.createElement(MessageControl, null),
                React__default.createElement(ViewElement, { className: `${STORAGE_BROWSER_BLOCK}__buttons` },
                    React__default.createElement(ActionCancelControl, null),
                    React__default.createElement(ActionStartControl, null))))));
};
CopyView.displayName = 'CopyView';
CopyView.Provider = CopyViewProvider;
CopyView.Cancel = ActionCancelControl;
CopyView.Destination = ActionDestinationControl;
CopyView.Exit = ActionExitControl;
CopyView.FoldersLoadingIndicator = LoadingIndicatorControl;
CopyView.FoldersMessage = FoldersMessageControl;
CopyView.FoldersPagination = FoldersPaginationControl;
CopyView.FoldersSearch = SearchFieldControl;
CopyView.FoldersTable = FoldersTableControl;
CopyView.Message = MessageControl;
CopyView.Start = ActionStartControl;
CopyView.Statuses = StatusDisplayControl;
CopyView.TasksTable = DataTableControl;
CopyView.Title = TitleControl;

export { CopyView };
