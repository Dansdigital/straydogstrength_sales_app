import React__default from 'react';
import { ControlsContextProvider } from '../../../controls/context.mjs';
import { useDisplayText } from '../../../displayText/context.mjs';
import '@aws-amplify/ui';
import useResolveTableData from '../../hooks/useResolveTableData/useResolveTableData.mjs';
import { DELETE_TABLE_RESOLVERS, DELETE_TABLE_KEYS } from '../../utils/tableResolvers/deleteResolvers.mjs';

function DeleteViewProvider({ children, ...props }) {
    const { DeleteView: displayText } = useDisplayText();
    const { actionCancelLabel, actionExitLabel, actionStartLabel, title, statusDisplayCanceledLabel, statusDisplayCompletedLabel, statusDisplayFailedLabel, statusDisplayQueuedLabel, getActionCompleteMessage, } = displayText;
    const { isProcessing, isProcessingComplete, statusCounts, tasks: items, onActionCancel, onActionStart, onActionExit, onTaskRemove, } = props;
    const message = isProcessingComplete
        ? getActionCompleteMessage({ counts: statusCounts })
        : undefined;
    const tableData = useResolveTableData(DELETE_TABLE_KEYS, DELETE_TABLE_RESOLVERS, {
        items,
        props: { displayText, isProcessing, onTaskRemove },
    });
    return (React__default.createElement(ControlsContextProvider, { data: {
            actionCancelLabel,
            actionExitLabel,
            actionStartLabel,
            isActionCancelDisabled: !isProcessing || isProcessingComplete,
            isActionExitDisabled: isProcessing,
            isActionStartDisabled: isProcessing || isProcessingComplete,
            statusDisplayCanceledLabel,
            statusDisplayCompletedLabel,
            statusDisplayFailedLabel,
            statusDisplayQueuedLabel,
            statusCounts,
            tableData,
            title,
            message,
        }, onActionStart: onActionStart, onActionExit: onActionExit, onActionCancel: onActionCancel }, children));
}

export { DeleteViewProvider };
