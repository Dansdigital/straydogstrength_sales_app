import React__default from 'react';
import '@aws-amplify/ui';
import '@aws-amplify/ui-react';
import '../../components/elements/definitions.mjs';
import '../../components/elements/IconElement.mjs';
import { ControlsContextProvider } from '../../controls/context.mjs';
import '../../components/composables/context.mjs';
import '@aws-amplify/ui-react-core';
import '@aws-amplify/ui-react-core/elements';
import { useDisplayText } from '../../displayText/context.mjs';
import { getLocationsViewTableData } from './getLocationsViewTableData/getLocationsViewTableData.mjs';

function LocationsViewProvider({ children, ...props }) {
    const { LocationsView: displayText } = useDisplayText();
    const { loadingIndicatorLabel, title, searchPlaceholder, searchSubmitLabel, searchClearLabel, getListLocationsResultMessage, } = displayText;
    const { hasError, hasNextPage, highestPageVisited, page, isLoading, searchQuery, hasExhaustedSearch, pageItems, message, onDownload, onRefresh, onPaginate, onNavigate, onSearch, onSearchQueryChange, onSearchClear, } = props;
    const messageControlContent = getListLocationsResultMessage({
        hasExhaustedSearch,
        isLoading,
        items: pageItems,
        hasError,
        message,
    });
    return (React__default.createElement(ControlsContextProvider, { data: {
            isDataRefreshDisabled: isLoading,
            loadingIndicatorLabel,
            tableData: getLocationsViewTableData({
                displayText,
                pageItems,
                onDownload,
                onNavigate,
            }),
            paginationData: {
                page,
                hasNextPage,
                highestPageVisited,
            },
            title,
            searchPlaceholder,
            searchClearLabel,
            searchSubmitLabel,
            searchQuery,
            message: messageControlContent,
            isLoading,
        }, onPaginate: onPaginate, onRefresh: onRefresh, onSearch: onSearch, onSearchQueryChange: onSearchQueryChange, onSearchClear: onSearchClear }, children));
}

export { LocationsViewProvider };
