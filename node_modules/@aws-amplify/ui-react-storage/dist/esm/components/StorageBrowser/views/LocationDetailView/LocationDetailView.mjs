import React__default from 'react';
import { classNames } from '@aws-amplify/ui';
import '@aws-amplify/ui-react';
import { ViewElement } from '../../components/elements/definitions.mjs';
import '../../components/elements/IconElement.mjs';
import { STORAGE_BROWSER_BLOCK } from '../../components/base/constants.mjs';
import '../../components/composables/context.mjs';
import '@aws-amplify/ui-react-core';
import '@aws-amplify/ui-react-core/elements';
import '../../controls/context.mjs';
import { ActionsListControl } from '../../controls/ActionsListControl.mjs';
import { DataRefreshControl } from '../../controls/DataRefreshControl.mjs';
import { DataTableControl } from '../../controls/DataTableControl.mjs';
import { DropZoneControl } from '../../controls/DropZoneControl.mjs';
import { LoadingIndicatorControl } from '../../controls/LoadingIndicatorControl.mjs';
import { MessageControl } from '../../controls/MessageControl.mjs';
import { NavigationControl } from '../../controls/NavigationControl.mjs';
import { PaginationControl } from '../../controls/PaginationControl.mjs';
import { SearchFieldControl } from '../../controls/SearchFieldControl.mjs';
import { SearchSubfoldersToggleControl } from '../../controls/SearchSubfoldersToggleControl.mjs';
import { TitleControl } from '../../controls/TitleControl.mjs';
import { LocationDetailViewProvider } from './LocationDetailViewProvider.mjs';
import { useLocationDetailView } from './useLocationDetailView.mjs';

const LocationDetailView = ({ className, ...props }) => {
    const state = useLocationDetailView(props);
    const { hasError } = state;
    return (React__default.createElement(ViewElement, { className: classNames(STORAGE_BROWSER_BLOCK, className), "data-testid": "LOCATION_DETAIL_VIEW" },
        React__default.createElement(LocationDetailViewProvider, { ...state },
            React__default.createElement(NavigationControl, null),
            React__default.createElement(TitleControl, null),
            React__default.createElement(ViewElement, { className: `${STORAGE_BROWSER_BLOCK}__controls` },
                React__default.createElement(ViewElement, { className: `${STORAGE_BROWSER_BLOCK}__search` },
                    React__default.createElement(SearchFieldControl, null),
                    React__default.createElement(SearchSubfoldersToggleControl, null)),
                React__default.createElement(PaginationControl, null),
                React__default.createElement(DataRefreshControl, null),
                React__default.createElement(ActionsListControl, null)),
            hasError ? null : (React__default.createElement(DropZoneControl, null,
                React__default.createElement(ViewElement, { className: `${STORAGE_BROWSER_BLOCK}__data-table` },
                    React__default.createElement(LoadingIndicatorControl, null),
                    React__default.createElement(DataTableControl, null)))),
            React__default.createElement(ViewElement, { className: `${STORAGE_BROWSER_BLOCK}__footer` },
                React__default.createElement(MessageControl, null)))));
};
LocationDetailView.displayName = 'LocationDetailView';
LocationDetailView.Provider = LocationDetailViewProvider;
LocationDetailView.ActionsList = ActionsListControl;
LocationDetailView.DropZone = DropZoneControl;
LocationDetailView.LoadingIndicator = LoadingIndicatorControl;
LocationDetailView.LocationItemsTable = DataTableControl;
LocationDetailView.Message = MessageControl;
LocationDetailView.Navigation = NavigationControl;
LocationDetailView.Pagination = PaginationControl;
LocationDetailView.Refresh = DataRefreshControl;
LocationDetailView.Search = SearchFieldControl;
LocationDetailView.SearchSubfoldersToggle = SearchSubfoldersToggleControl;
LocationDetailView.Title = TitleControl;

export { LocationDetailView };
