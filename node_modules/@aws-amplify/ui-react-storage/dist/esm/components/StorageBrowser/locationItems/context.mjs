import React__default from 'react';
import { createContextUtilities } from '@aws-amplify/ui-react-core';
import { noop } from '@aws-amplify/ui';
import '@aws-amplify/storage/internals';
import { createFileDataItem } from '../actions/handlers/utils.mjs';
import 'aws-amplify/storage';
import '../actions/configs/context.mjs';
import '../actions/configs/defaults.mjs';

const DEFAULT_STATE = {
    fileDataItems: undefined,
};
const locationItemsReducer = (prevState, event) => {
    switch (event.type) {
        case 'SET_LOCATION_ITEMS': {
            const { items } = event;
            if (!items?.length)
                return prevState;
            if (!prevState.fileDataItems?.length) {
                return { fileDataItems: items.map(createFileDataItem) };
            }
            const nextFileDataItems = items?.reduce((fileDataItems, data) => prevState.fileDataItems?.some(({ id }) => id === data.id)
                ? fileDataItems
                : fileDataItems.concat(createFileDataItem(data)), []);
            if (!nextFileDataItems?.length)
                return prevState;
            return {
                fileDataItems: prevState.fileDataItems.concat(nextFileDataItems),
            };
        }
        case 'REMOVE_LOCATION_ITEM': {
            const { id } = event;
            if (!prevState.fileDataItems)
                return prevState;
            const fileDataItems = prevState.fileDataItems.filter((item) => item.id !== id);
            if (fileDataItems.length === prevState.fileDataItems.length) {
                return prevState;
            }
            return { fileDataItems };
        }
        case 'RESET_LOCATION_ITEMS': {
            return DEFAULT_STATE;
        }
    }
};
const defaultValue = [DEFAULT_STATE, noop];
const { LocationItemsContext, useLocationItems } = createContextUtilities({ contextName: 'LocationItems', defaultValue });
function LocationItemsProvider({ children, }) {
    const value = React__default.useReducer(locationItemsReducer, DEFAULT_STATE);
    return (React__default.createElement(LocationItemsContext.Provider, { value: value }, children));
}

export { DEFAULT_STATE, LocationItemsContext, LocationItemsProvider, useLocationItems };
