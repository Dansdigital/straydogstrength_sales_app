import { Amplify } from 'aws-amplify';
import { fetchAuthSession } from 'aws-amplify/auth';
import { Hub } from 'aws-amplify/utils';
import { createAmplifyListLocationsHandler } from './createAmplifyListLocationsHandler.mjs';

const MISSING_BUCKET_OR_REGION_ERROR = 'Amplify Storage configuration not found. Did you run `Amplify.configure` from your project root?';
const MISSING_IDENTITY_ID_ERROR = '`identityId` not found.';
const MISSING_TEMPORARY_CREDENTIALS_ERROR = 'Temporary Auth `credentials` not found.';
const isTemporaryCredentials = (value) => !!value?.sessionToken || !!value?.expiration;
const createAmplifyAuthAdapter = () => {
    const { bucket, region } = Amplify.getConfig()?.Storage?.S3 ?? {};
    if (!bucket || !region) {
        throw new Error(MISSING_BUCKET_OR_REGION_ERROR);
    }
    const listLocations = createAmplifyListLocationsHandler();
    const getLocationCredentials = async () => {
        const { credentials, identityId } = await fetchAuthSession();
        if (!isTemporaryCredentials(credentials)) {
            throw new Error(MISSING_TEMPORARY_CREDENTIALS_ERROR);
        }
        if (!identityId) {
            throw new Error(MISSING_IDENTITY_ID_ERROR);
        }
        return { credentials, identityId };
    };
    const registerAuthListener = (onStateChange) => {
        const remove = Hub.listen('auth', (data) => {
            if (data.payload.event === 'signedOut') {
                onStateChange();
                remove();
            }
        });
    };
    return {
        getLocationCredentials,
        listLocations,
        registerAuthListener,
        region,
    };
};

export { MISSING_BUCKET_OR_REGION_ERROR, MISSING_IDENTITY_ID_ERROR, MISSING_TEMPORARY_CREDENTIALS_ERROR, createAmplifyAuthAdapter };
