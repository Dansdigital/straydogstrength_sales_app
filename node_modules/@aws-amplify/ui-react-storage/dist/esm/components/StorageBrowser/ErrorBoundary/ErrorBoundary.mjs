import React__default from 'react';
import '@aws-amplify/ui';
import '@aws-amplify/ui-react';
import '../components/elements/definitions.mjs';
import '../components/elements/IconElement.mjs';
import { STORAGE_BROWSER_BLOCK_TO_BE_UPDATED } from '../components/base/constants.mjs';
import '../components/composables/context.mjs';
import '@aws-amplify/ui-react-core';
import '@aws-amplify/ui-react-core/elements';

const Fallback = () => (React__default.createElement("div", { className: STORAGE_BROWSER_BLOCK_TO_BE_UPDATED },
    React__default.createElement("div", { className: `${STORAGE_BROWSER_BLOCK_TO_BE_UPDATED}__error-boundary` }, "Something went wrong.")));
class ErrorBoundary extends React__default.Component {
    constructor(props) {
        super(props);
        this.state = { hasError: false };
    }
    static getDerivedStateFromError(_error) {
        // Update state so the next render will show the fallback UI.
        return { hasError: true };
    }
    render() {
        const { hasError } = this.state;
        const { children } = this.props;
        if (hasError) {
            return React__default.createElement(Fallback, null);
        }
        return children;
    }
}

export { ErrorBoundary };
