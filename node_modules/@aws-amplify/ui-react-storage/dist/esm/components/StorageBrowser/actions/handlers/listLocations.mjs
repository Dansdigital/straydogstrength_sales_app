import { listCallerAccessGrants } from '@aws-amplify/storage/internals';
import '@aws-amplify/ui';
import { assertAccountId } from '../../validators/assertAccountId.mjs';
import { getFilteredLocations } from './utils.mjs';

const DEFAULT_PAGE_SIZE = 1000;
const listLocationsHandler = async (input) => {
    const { config, options } = input;
    const { accountId, credentials, customEndpoint, region } = config;
    const { exclude, nextToken, pageSize = DEFAULT_PAGE_SIZE } = options ?? {};
    const fetchLocations = async (accumulatedItems, locationsNextToken) => {
        const remainingPageSize = pageSize - accumulatedItems.length;
        assertAccountId(accountId);
        const output = await listCallerAccessGrants({
            accountId,
            credentialsProvider: credentials,
            customEndpoint,
            nextToken: locationsNextToken,
            pageSize: remainingPageSize,
            region,
        });
        const parsedOutput = getFilteredLocations(output.locations, exclude);
        const items = [...accumulatedItems, ...parsedOutput];
        if (output.nextToken && items.length < pageSize) {
            return fetchLocations(items, output.nextToken);
        }
        return { items, nextToken: output.nextToken };
    };
    return fetchLocations([], nextToken);
};

export { listLocationsHandler };
