import { isFunction } from '@aws-amplify/ui';
import { uploadData } from '@aws-amplify/storage/internals';
import { constructBucket, getProgress } from './utils.mjs';
import { DEFAULT_CHECKSUM_ALGORITHM } from './constants.mjs';

const createFolderHandler = (input) => {
    const { config, data, options } = input;
    const { accountId, credentials, customEndpoint } = config;
    const { onProgress } = options ?? {};
    const { key, preventOverwrite } = data;
    const bucket = constructBucket(config);
    const { result } = uploadData({
        path: key,
        data: '',
        options: {
            bucket,
            expectedBucketOwner: accountId,
            locationCredentialsProvider: credentials,
            customEndpoint,
            onProgress: (event) => {
                if (isFunction(onProgress))
                    onProgress(data, getProgress(event));
            },
            preventOverwrite,
            checksumAlgorithm: DEFAULT_CHECKSUM_ALGORITHM,
        },
    });
    return {
        result: result
            .then(({ path }) => ({
            status: 'COMPLETE',
            value: { key: path },
        }))
            .catch((error) => {
            const { message, name } = error;
            if (name === 'PreconditionFailed') {
                return { error, message, status: 'OVERWRITE_PREVENTED' };
            }
            return { error, message, status: 'FAILED' };
        }),
    };
};

export { createFolderHandler };
