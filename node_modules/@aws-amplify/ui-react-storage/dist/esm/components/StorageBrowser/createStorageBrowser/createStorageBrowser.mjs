import React__default from 'react';
import { setUserAgent } from '@aws-amplify/ui';
import { VERSION } from '../../../version.mjs';
import { ErrorBoundary } from '../ErrorBoundary/ErrorBoundary.mjs';
import '../useAction/context.mjs';
import { useAction } from '../useAction/useAction.mjs';
import '@aws-amplify/ui-react-core';
import '@aws-amplify/ui-react-core/elements';
import '../credentials/context.mjs';
import '@aws-amplify/storage/internals';
import '../configuration/context.mjs';
import 'aws-amplify/storage';
import { assertRegisterAuthListener } from '../validators/assertRegisterAuthListener.mjs';
import '../actions/configs/context.mjs';
import '../actions/configs/defaults.mjs';
import '../views/context/actionViews.mjs';
import '../views/context/primaryViews.mjs';
import { CopyView } from '../views/LocationActionView/CopyView/CopyView.mjs';
import '../locationItems/context.mjs';
import '../store/context.mjs';
import { CreateFolderView } from '../views/LocationActionView/CreateFolderView/CreateFolderView.mjs';
import { DeleteView } from '../views/LocationActionView/DeleteView/DeleteView.mjs';
import { LocationActionView } from '../views/LocationActionView/LocationActionView.mjs';
import { UploadView } from '../views/LocationActionView/UploadView/UploadView.mjs';
import '../files/context.mjs';
import { LocationDetailView } from '../views/LocationDetailView/LocationDetailView.mjs';
import { LocationsView } from '../views/LocationsView/LocationsView.mjs';
import { useView } from '../views/useView.mjs';
import createProvider from './createProvider.mjs';
import StorageBrowserDefault from './StorageBrowserDefault.mjs';

const UA_CONFIG = {
    componentName: 'StorageBrowser',
    packageName: 'react-storage',
    version: VERSION,
};
/**
 * Creates a `StorageBrowser` component and utility hooks from provided configuration `input`.
 *
 * @param input - `StorageBrowser` auth, actions and ui configuration values
 * @returns `StorageBrowser` component, `useAction` and `useView` hooks
 */
function createStorageBrowser(input) {
    assertRegisterAuthListener(input.config.registerAuthListener);
    setUserAgent(UA_CONFIG);
    /**
     * Provides state, configuration and action values that are shared between
     * the primary View components
     */
    const Provider = createProvider(input);
    const ErrorBoundary$1 = input.ErrorBoundary === null
        ? React__default.Fragment
        : input.ErrorBoundary ?? ErrorBoundary;
    const StorageBrowser = (props) => (React__default.createElement(ErrorBoundary$1, null,
        React__default.createElement(Provider, { ...props },
            React__default.createElement(StorageBrowserDefault, null))));
    StorageBrowser.LocationActionView =
        LocationActionView;
    StorageBrowser.LocationDetailView = LocationDetailView;
    StorageBrowser.LocationsView = LocationsView;
    StorageBrowser.CopyView = CopyView;
    StorageBrowser.CreateFolderView = CreateFolderView;
    StorageBrowser.DeleteView = DeleteView;
    StorageBrowser.UploadView = UploadView;
    StorageBrowser.Provider = Provider;
    StorageBrowser.displayName = 'StorageBrowser';
    return { StorageBrowser, useAction, useView };
}

export { createStorageBrowser as default };
