import { INITIAL_STATUS_COUNTS } from './constants.mjs';

const getStatusCounts = (tasks = []) => tasks.reduce((counts, { status }) => ({ ...counts, [status]: counts[status] + 1 }), { ...INITIAL_STATUS_COUNTS, TOTAL: tasks.length });
const isProcessingTasks = (statusCounts) => {
    if (statusCounts.TOTAL === 0 || statusCounts.TOTAL === statusCounts.QUEUED) {
        return false;
    }
    return !(statusCounts.QUEUED === 0 && statusCounts.PENDING === 0);
};
const hasCompletedProcessingTasks = (statusCounts) => {
    if (statusCounts.TOTAL === 0 || isProcessingTasks(statusCounts))
        return false;
    return statusCounts.QUEUED === 0 && statusCounts.PENDING === 0;
};

export { getStatusCounts, hasCompletedProcessingTasks, isProcessingTasks };
