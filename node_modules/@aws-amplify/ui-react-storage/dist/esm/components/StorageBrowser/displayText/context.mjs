import React__default from 'react';
import { createContextUtilities } from '@aws-amplify/ui-react-core';
import { DEFAULT_STORAGE_BROWSER_DISPLAY_TEXT } from './libraries/en/default.mjs';

const { DisplayTextContext, useDisplayText } = createContextUtilities({
    contextName: 'DisplayText',
    errorMessage: '`useDisplayText` must be called inside `DisplayTextProvider`',
});
function resolveDisplayText(displayText) {
    if (!displayText)
        return DEFAULT_STORAGE_BROWSER_DISPLAY_TEXT;
    // override
    const { CopyView, CreateFolderView, DeleteView, LocationDetailView, LocationsView, UploadView, } = displayText;
    return {
        CopyView: { ...DEFAULT_STORAGE_BROWSER_DISPLAY_TEXT.CopyView, ...CopyView },
        CreateFolderView: {
            ...DEFAULT_STORAGE_BROWSER_DISPLAY_TEXT.CreateFolderView,
            ...CreateFolderView,
        },
        DeleteView: {
            ...DEFAULT_STORAGE_BROWSER_DISPLAY_TEXT.DeleteView,
            ...DeleteView,
        },
        LocationDetailView: {
            ...DEFAULT_STORAGE_BROWSER_DISPLAY_TEXT.LocationDetailView,
            ...LocationDetailView,
        },
        LocationsView: {
            ...DEFAULT_STORAGE_BROWSER_DISPLAY_TEXT.LocationsView,
            ...LocationsView,
        },
        UploadView: {
            ...DEFAULT_STORAGE_BROWSER_DISPLAY_TEXT.UploadView,
            ...UploadView,
        },
    };
}
function DisplayTextProvider({ children, displayText: _override, }) {
    // do deep merge here of default and override here
    const resolvedDisplayText = React__default.useMemo(() => resolveDisplayText(_override), [_override]);
    return (React__default.createElement(DisplayTextContext.Provider, { value: resolvedDisplayText }, children));
}

export { DisplayTextContext, DisplayTextProvider, resolveDisplayText, useDisplayText };
