import { DEFAULT_LIST_VIEW_DISPLAY_TEXT } from './shared.mjs';

const DEFAULT_ERROR_MESSAGE = 'There was an error loading items.';
const DEFAULT_LOCATION_DETAIL_VIEW_DISPLAY_TEXT = {
    ...DEFAULT_LIST_VIEW_DISPLAY_TEXT,
    getListItemsResultMessage: (data) => {
        const { items, hasExhaustedSearch, hasError = false, message, isLoading, } = data ?? {};
        if (isLoading) {
            return undefined;
        }
        if (hasError) {
            return {
                type: 'error',
                content: message ?? DEFAULT_ERROR_MESSAGE,
            };
        }
        if (!items?.length && hasExhaustedSearch) {
            return {
                type: 'info',
                content: `No results found in the first 10,000 items.`,
            };
        }
        if (!items?.length) {
            return {
                type: 'info',
                content: 'No files.',
            };
        }
        if (hasExhaustedSearch) {
            return {
                type: 'info',
                content: `Showing results for up to the first 10,000 items.`,
            };
        }
        // TODO: add more cases as needed
        return undefined;
    },
    searchSubfoldersToggleLabel: 'Include subfolders',
    searchPlaceholder: 'Search current folder',
    tableColumnLastModifiedHeader: 'Last modified',
    tableColumnNameHeader: 'Name',
    tableColumnSizeHeader: 'Size',
    tableColumnTypeHeader: 'Type',
    selectFileLabel: 'Select file',
    selectAllFilesLabel: 'Select all files',
    getActionListItemLabel: (key = '') => {
        switch (key) {
            case 'Copy':
                return 'Copy';
            case 'Delete':
                return 'Delete';
            case 'Create folder':
                return 'Create folder';
            case 'Upload':
                return 'Upload';
            default:
                return key;
        }
    },
    getTitle: (location) => {
        const { current, key } = location;
        const { bucket = '' } = current ?? {};
        return key || bucket;
    },
};

export { DEFAULT_ERROR_MESSAGE, DEFAULT_LOCATION_DETAIL_VIEW_DISPLAY_TEXT };
