import React__default from 'react';
import '@aws-amplify/ui';
import '@aws-amplify/ui-react';
import { NavElement, OrderedListElement, ListItemElement, SpanElement } from '../elements/definitions.mjs';
import '../elements/IconElement.mjs';
import { STORAGE_BROWSER_BLOCK_TO_BE_UPDATED } from '../base/constants.mjs';
import { PaginationButton } from '../base/PaginationButton.mjs';

const Pagination = ({ page, hasNextPage, onPaginate, highestPageVisited, }) => {
    if (!page)
        return null;
    return (React__default.createElement(NavElement, { "aria-label": 'Pagination', className: `${STORAGE_BROWSER_BLOCK_TO_BE_UPDATED}__pagination` },
        React__default.createElement(OrderedListElement, { className: `${STORAGE_BROWSER_BLOCK_TO_BE_UPDATED}__pagination-list` },
            React__default.createElement(ListItemElement, { className: `${STORAGE_BROWSER_BLOCK_TO_BE_UPDATED}__pagination-list-item` },
                React__default.createElement(PaginationButton, { isDisabled: page <= 1, onClick: () => {
                        if (onPaginate)
                            onPaginate(page - 1);
                    }, type: "previous" })),
            React__default.createElement(ListItemElement, { className: `${STORAGE_BROWSER_BLOCK_TO_BE_UPDATED}__pagination-list-item` },
                React__default.createElement(SpanElement, { "aria-label": `Page ${page}`, "aria-current": "page", className: `${STORAGE_BROWSER_BLOCK_TO_BE_UPDATED}__pagination-current-page` }, page)),
            React__default.createElement(ListItemElement, { className: `${STORAGE_BROWSER_BLOCK_TO_BE_UPDATED}__pagination-list-item` },
                React__default.createElement(PaginationButton, { isDisabled: !highestPageVisited ||
                        (page >= highestPageVisited && !hasNextPage), onClick: () => {
                        if (onPaginate)
                            onPaginate(page + 1);
                    }, type: "next" })))));
};

export { Pagination };
