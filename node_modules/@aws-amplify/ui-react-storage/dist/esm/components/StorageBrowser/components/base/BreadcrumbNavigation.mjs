import React__default from 'react';
import { isFunction } from '@aws-amplify/ui';
import '@aws-amplify/ui-react';
import { NavElement, OrderedListElement, ListItemElement, ButtonElement, SpanElement } from '../elements/definitions.mjs';
import '../elements/IconElement.mjs';
import { STORAGE_BROWSER_BLOCK_TO_BE_UPDATED } from './constants.mjs';
import { Separator } from './Separator.mjs';

const Breadcrumb = ({ isCurrent, name, onNavigate, }) => {
    const isNavigable = isFunction(onNavigate);
    return (React__default.createElement(ListItemElement, { "aria-current": isCurrent ? 'page' : undefined, className: `${STORAGE_BROWSER_BLOCK_TO_BE_UPDATED}__breadcrumb-list-item` },
        React__default.createElement(React__default.Fragment, null,
            !isCurrent && isNavigable ? (React__default.createElement(ButtonElement, { className: `${STORAGE_BROWSER_BLOCK_TO_BE_UPDATED}__breadcrumb-button`, onClick: onNavigate, variant: "navigate" }, name)) : (React__default.createElement(SpanElement, { className: `${STORAGE_BROWSER_BLOCK_TO_BE_UPDATED}__breadcrumb-text`, variant: "navigation-text" }, name)),
            !isCurrent ? React__default.createElement(Separator, null) : null)));
};
function BreadcrumbNavigation({ breadcrumbs, role = 'navigation', }) {
    return (React__default.createElement(NavElement, { "aria-label": 'Breadcrumb', className: `${STORAGE_BROWSER_BLOCK_TO_BE_UPDATED}__breadcrumb`, role: role },
        React__default.createElement(OrderedListElement, { className: `${STORAGE_BROWSER_BLOCK_TO_BE_UPDATED}__breadcrumb-list` }, breadcrumbs.map(({ isCurrent, name, onNavigate }, index) => {
            return (React__default.createElement(Breadcrumb, { key: `${index}-breadcrumb-${name}`, isCurrent: isCurrent, name: name, onNavigate: onNavigate }));
        }))));
}

export { Breadcrumb, BreadcrumbNavigation };
