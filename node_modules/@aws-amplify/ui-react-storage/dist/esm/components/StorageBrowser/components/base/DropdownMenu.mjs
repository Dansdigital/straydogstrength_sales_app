import React__default from 'react';
import '@aws-amplify/ui-react';
import { ViewElement, ButtonElement } from '../elements/definitions.mjs';
import { IconElement } from '../elements/IconElement.mjs';
import { STORAGE_BROWSER_BLOCK_TO_BE_UPDATED } from './constants.mjs';

function MenuItem({ isDisabled, icon, label, onClick, }) {
    return (React__default.createElement(ButtonElement, { className: `${STORAGE_BROWSER_BLOCK_TO_BE_UPDATED}__menu-item`, disabled: isDisabled, role: 'menuitem', onClick: onClick, variant: "menu-item" },
        icon && (React__default.createElement(IconElement, { className: `${STORAGE_BROWSER_BLOCK_TO_BE_UPDATED}__menu-item-icon`, variant: icon })),
        label));
}
function DropdownMenu({ isDisabled = false, items, onItemSelect, }) {
    const [isOpen, setIsOpen] = React__default.useState(false);
    return (React__default.createElement(ViewElement, { className: `${STORAGE_BROWSER_BLOCK_TO_BE_UPDATED}__menu` },
        React__default.createElement(ButtonElement, { "aria-label": "Menu Toggle", className: `${STORAGE_BROWSER_BLOCK_TO_BE_UPDATED}__menu-toggle`, disabled: isDisabled || !items?.length, "data-testid": "MENU_TOGGLE", onClick: () => {
                setIsOpen((prev) => !prev);
            }, variant: "menu-toggle" },
            React__default.createElement(IconElement, { className: `${STORAGE_BROWSER_BLOCK_TO_BE_UPDATED}__menu-toggle-icon`, variant: "vertical-kebab" })),
        React__default.createElement(ViewElement, { "aria-label": "Menu Items", className: `${STORAGE_BROWSER_BLOCK_TO_BE_UPDATED}__menu-list${isOpen
                ? ` ${STORAGE_BROWSER_BLOCK_TO_BE_UPDATED}__menu-list--open`
                : ''}`, "data-testid": "MENU_LIST", role: "menu", variant: "menu-list" }, items
            .filter(({ isHidden }) => !isHidden)
            .map(({ icon, id, isDisabled, label }) => {
            return (React__default.createElement(MenuItem, { key: `menu-item-${id}`, isDisabled: isDisabled, icon: icon, label: label, onClick: () => {
                    setIsOpen(false);
                    onItemSelect?.(id);
                } }));
        }))));
}

export { DropdownMenu, MenuItem };
