import React__default from 'react';
import { BreadcrumbNavigation } from '../base/BreadcrumbNavigation.mjs';
import '@aws-amplify/ui-react';
import { ViewElement, SpanElement, DescriptionListElement, DescriptionTermElement, DescriptionDetailsElement } from '../elements/definitions.mjs';
import '../elements/IconElement.mjs';
import { STORAGE_BROWSER_BLOCK } from '../base/constants.mjs';
import { Separator } from '../base/Separator.mjs';

const ActionDestination = ({ isNavigable, items, label, }) => {
    if (!items.length) {
        return null;
    }
    return (React__default.createElement(ViewElement, { className: `${STORAGE_BROWSER_BLOCK}__destination` }, isNavigable ? (React__default.createElement(React__default.Fragment, null,
        React__default.createElement(SpanElement, null, `${label}:`),
        React__default.createElement(BreadcrumbNavigation, { breadcrumbs: items, role: "complementary" }))) : (React__default.createElement(DescriptionListElement, { className: `${STORAGE_BROWSER_BLOCK}__description-list`, role: "list" },
        React__default.createElement(DescriptionTermElement, { className: `${STORAGE_BROWSER_BLOCK}__description-term`, role: "term" }, `${label}:`),
        items.map(({ name }, index) => {
            return (React__default.createElement(React__default.Fragment, { key: `action-destination-item-${name}-${index}` },
                React__default.createElement(DescriptionDetailsElement, { className: `${STORAGE_BROWSER_BLOCK}__description-details`, role: "definition" },
                    React__default.createElement(SpanElement, { variant: "destination-text" }, name)),
                index === items.length - 1 ? null : React__default.createElement(Separator, null)));
        })))));
};

export { ActionDestination };
