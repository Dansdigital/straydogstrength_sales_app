const getNavigationItems = ({ destinationParts, location, onNavigate, }) => {
    const { bucket, permissions, prefix = '', type } = location;
    const destinationSubpaths = [];
    return destinationParts.map((part, index) => {
        const isCurrent = index === destinationParts.length - 1;
        if (index !== 0) {
            destinationSubpaths.push(part);
        }
        const destinationPath = `${destinationSubpaths.concat('').join('/')}`;
        const destination = {
            id: crypto.randomUUID(),
            type,
            permissions,
            bucket,
            prefix,
        };
        return {
            name: part,
            ...(isCurrent && { isCurrent }),
            onNavigate: () => {
                onNavigate?.(destination, destinationPath);
            },
        };
    });
};

export { getNavigationItems };
