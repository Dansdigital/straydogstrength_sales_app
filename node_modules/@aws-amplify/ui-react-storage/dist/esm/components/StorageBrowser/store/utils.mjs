import { isObject } from '@aws-amplify/ui';
import { DEFAULT_STATE } from './constants.mjs';

const parseLocationType = ({ prefix, }) => prefix?.endsWith('/') ? 'PREFIX' : prefix?.length ? 'OBJECT' : 'BUCKET';
function getLocationData(location) {
    if (location === undefined)
        return;
    const { bucket, permissions, prefix, id: _id, type: _type } = location;
    const id = _id ?? crypto.randomUUID();
    const type = _type ?? parseLocationType(location);
    return { bucket, permissions, prefix, id, type };
}
function getState(value) {
    if (value === undefined || value === null)
        return DEFAULT_STATE;
    const current = getLocationData(value.location);
    if (!current)
        return DEFAULT_STATE;
    const actionType = value?.actionType;
    const path = value?.location?.path ?? '';
    const key = `${current.prefix}${path}`;
    return { actionType, location: { current, key, path } };
}
function getInitialState(defaultValue, legacyProps) {
    // prefer `defaultValue` if provided
    if (isObject(defaultValue) || defaultValue === null) {
        return getState(defaultValue);
    }
    const legacyValue = legacyProps
        ? {
            actionType: legacyProps.actionType,
            location: legacyProps.location
                ? { ...legacyProps.location, path: legacyProps.path }
                : undefined,
        }
        : undefined;
    return getState(legacyValue);
}

export { getInitialState, getLocationData, getState, parseLocationType };
