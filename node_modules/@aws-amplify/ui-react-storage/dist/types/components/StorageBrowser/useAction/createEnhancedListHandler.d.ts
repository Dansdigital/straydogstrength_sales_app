import type { AsyncReducer } from '@aws-amplify/ui-react-core';
import type { ListHandler, ListHandlerOptions, ListHandlerInput, ListHandlerOutput } from '../actions';
import type { SearchOptions } from './searchItems';
export declare const SEARCH_LIMIT = 10000;
export declare const SEARCH_PAGE_SIZE = 1000;
export type EnhancedListHandlerOptions<TOptions, TItem> = TOptions & {
    refresh?: boolean;
    reset?: boolean;
    search?: SearchOptions<TItem>;
};
export type EnhancedListHandlerInput<TInput extends {
    options?: ListHandlerOptions<any>;
}, TItem> = Omit<TInput, 'config' | 'options'> & {
    options?: EnhancedListHandlerOptions<TInput['options'], TItem>;
};
export interface EnhancedListHandlerOutput<TItem> extends ListHandlerOutput<TItem> {
    hasExhaustedSearch?: boolean;
}
export interface EnhancedListHandler<TInput extends {
    options?: ListHandlerOptions<any>;
}, TItem> extends AsyncReducer<EnhancedListHandlerOutput<TItem>, EnhancedListHandlerInput<TInput, TItem>> {
}
export declare const createEnhancedListHandler: <TInput extends ListHandlerInput<ListHandlerOptions<any>>, TItem>(handler: ListHandler<TInput, ListHandlerOutput<TItem>>) => EnhancedListHandler<TInput, TItem>;
