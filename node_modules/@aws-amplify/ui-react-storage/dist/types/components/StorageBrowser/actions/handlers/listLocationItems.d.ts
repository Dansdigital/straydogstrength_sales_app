import type { ListOutput } from '../../storage-internal';
import type { ListHandler, ListHandlerInput, ListHandlerOptions, ListHandlerOutput, LocationItemData } from './types';
export type LocationItemType = LocationItemData['type'];
export interface ListLocationItemsHandlerOptions extends ListHandlerOptions<LocationItemType> {
    delimiter?: string;
    query?: string;
}
export interface ListLocationItemsHandlerInput extends ListHandlerInput<ListLocationItemsHandlerOptions> {
}
export interface ListLocationItemsHandlerOutput extends ListHandlerOutput<LocationItemData> {
}
export interface ListLocationItemsHandler extends ListHandler<ListLocationItemsHandlerInput, ListLocationItemsHandlerOutput> {
}
export declare const filterDotItems: (items: LocationItemData[], prefix: string) => LocationItemData[];
export declare const parseResult: ({ excludedSubpaths, items }: ListOutput, prefix: string) => LocationItemData[];
export declare const listLocationItemsHandler: ListLocationItemsHandler;
