import type { TransferProgressEvent } from 'aws-amplify/storage';
import type { LocationAccess as AccessGrantLocation } from '../../storage-internal';
import type { ActionInputConfig, FileData, FileDataItem, FileItem, ListLocationsExcludeOptions, LocationData } from './types';
export declare const constructBucket: ({ bucket: bucketName, region, }: Pick<ActionInputConfig, 'bucket' | 'region'>) => {
    bucketName: string;
    region: string;
};
export declare const parseAccessGrantLocation: (location: AccessGrantLocation) => LocationData;
export declare const shouldExcludeLocation: ({ permissions, type }: LocationData, exclude?: ListLocationsExcludeOptions) => boolean;
export declare const getFilteredLocations: (locations: AccessGrantLocation[], exclude?: ListLocationsExcludeOptions) => LocationData[];
export declare const getFileKey: (key: string) => string;
export declare const createFileDataItem: (data: FileData) => FileDataItem;
export declare const isFileItem: (value: unknown) => value is FileItem;
export declare const isFileDataItem: (item: unknown) => item is FileDataItem;
export declare const getProgress: ({ totalBytes, transferredBytes, }: TransferProgressEvent) => number | undefined;
export declare const isMultipartUpload: (file: File) => boolean;
