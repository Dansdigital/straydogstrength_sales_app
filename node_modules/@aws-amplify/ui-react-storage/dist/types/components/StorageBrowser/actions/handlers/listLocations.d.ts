import type { ListHandlerOptions, ListHandler, ListLocationsExcludeOptions, LocationData, ActionInputConfig } from './types';
export interface ListLocationsOptions extends ListLocationsHandlerOptions {
}
export interface ListLocationsInput {
    options?: ListLocationsOptions;
}
export interface ListLocationsOutput {
    items: LocationData[];
    nextToken: string | undefined;
}
export interface ListLocations extends ListHandler<ListLocationsInput, ListLocationsOutput> {
}
export interface ListLocationsHandlerOptions extends ListHandlerOptions<ListLocationsExcludeOptions> {
}
export interface ListLocationsHandlerInput {
    options?: ListLocationsHandlerOptions;
    config: Omit<ActionInputConfig, 'bucket'>;
}
export interface ListLocationsHandlerOutput extends ListLocationsOutput {
}
export interface ListLocationsHandler extends ListHandler<ListLocationsHandlerInput, ListLocationsHandlerOutput> {
}
export declare const listLocationsHandler: ListLocationsHandler;
