import type { DataTableButtonDataCell, DataTableNumberDataCell } from '../../../components';
import type { CopyActionTask, DeleteActionTask, GetCopyCell, GetDeleteCell, UploadActionTask } from './types';
export declare const getFileType: (value: string, fallback?: string) => string;
export declare const getCellName: (value: string) => string;
export declare const getUploadCellFolder: ({ data: { file: { webkitRelativePath }, }, }: UploadActionTask, fallback?: string) => string;
export declare const getCopyCellFolder: ({ data: { fileKey, sourceKey }, }: CopyActionTask) => string;
export declare const getDeleteCellFolder: ({ data: { fileKey, key }, }: DeleteActionTask) => string;
export declare const getUploadCellProgress: ({ progress, status, }: UploadActionTask) => DataTableNumberDataCell['content'];
export declare const getFileSize: (value: number | undefined, fallback?: string) => string;
type CellInput = Parameters<GetCopyCell>[0] | Parameters<GetDeleteCell>[0];
export declare const getCopyOrDeleteCancelCellContent: <TInput extends CellInput, TCallback extends TInput["props"]["onTaskRemove"] extends (item: infer TItem) => void ? (item: TItem) => void : never>(data: TInput) => DataTableButtonDataCell['content'];
export {};
